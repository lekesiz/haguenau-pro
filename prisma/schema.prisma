// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model Business {
  id               Int       @id @default(autoincrement())
  osmId            BigInt    @unique @map("osm_id")
  osmType          String    @map("osm_type") // 'node', 'way', 'relation'
  name             String
  nameFr           String?   @map("name_fr")
  nameEn           String?   @map("name_en")
  nameDe           String?   @map("name_de")
  categoryId       Int?      @map("category_id")
  subcategory      String?
  latitude         Float
  longitude        Float
  address          String?
  postalCode       String?   @map("postal_code")
  city             String?
  phone            String?
  email            String?
  website          String?
  openingHours     String?   @map("opening_hours")
  description      String?
  tags             Json?
  googlePlaceId    String?   @map("google_place_id")
  rating           Float?
  reviewCount      Int?      @map("review_count")
  photos           Json?
  isActive         Boolean   @default(true) @map("is_active")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  lastVerifiedAt   DateTime? @map("last_verified_at")

  category Category? @relation(fields: [categoryId], references: [id])

  @@index([categoryId])
  @@index([name])
  @@index([latitude, longitude])
  @@map("businesses")
}

model Category {
  id           Int       @id @default(autoincrement())
  slug         String    @unique
  nameFr       String    @map("name_fr")
  nameEn       String    @map("name_en")
  nameDe       String    @map("name_de")
  nameTr       String    @map("name_tr")
  icon         String?
  color        String?
  osmTags      Json      @map("osm_tags")
  displayOrder Int       @default(0) @map("display_order")
  isActive     Boolean   @default(true) @map("is_active")

  businesses Business[]

  @@map("categories")
}

model SyncLog {
  id                Int       @id @default(autoincrement())
  syncType          String    @map("sync_type") // 'full', 'incremental', 'category'
  status            String // 'running', 'success', 'failed'
  startedAt         DateTime  @map("started_at")
  completedAt       DateTime? @map("completed_at")
  businessesAdded   Int       @default(0) @map("businesses_added")
  businessesUpdated Int       @default(0) @map("businesses_updated")
  businessesRemoved Int       @default(0) @map("businesses_removed")
  errorMessage      String?   @map("error_message")
  metadata          Json?

  @@map("sync_logs")
}
